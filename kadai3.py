import numpy as np
st_num = "2211278"

n = [int(i) for i in st_num]
n.reverse()
n.insert(0,0) # nを1-indexedにする

for i, ans in enumerate(n):
    print(f"n[{i}] : {ans}")

a = [0] * 18
a[1] = (n[1] + n[2]) / 20
a[2] = (n[2] + n[3]) / 20
a[3] = (n[1] + n[3]) / 20
a[4] = n[1] / 20
a[5] = n[2] / 20
a[6] = n[3] / 20
a[7] = (n[1] + 10) / 20
a[8] = (n[2] + 11) / 20
a[9] = (n[3] + 12) / 20
a[10] = (n[1] + 1) / 20
a[11] = (n[2] + n[3]) / 20
a[12] = a[1] + a[4] + a[10]
a[13] = a[1] + a[5] + a[11]
a[14] = a[2] + a[6] + a[10]
a[15] = a[2] + a[7] + a[11]
a[16] = a[3] + a[8] + a[10]
a[17] = a[3] + a[9] + a[11]

for i in range(1, len(a)):
    print(f"1-{i} : {a[i]}")

b = [0] * 7
## b[0] + ... + b[6] = 1
tot_exp = 0
for i in range(1, len(b)):
    b[i] = np.exp(a[i + 11])
    tot_exp += b[i]
for i in range(1, len(b)):
    b[i] = b[i] / tot_exp
    print(f"2-{i} : {b[i]}")

c = [0] * 6
## c[1] + ... + c[3] = 1
## c[4] + c[5] = 1
c[1] = b[1] + b[2]
c[2] = b[3] + b[4]
c[3] = b[5] + b[6]
c[4] = b[1] + b[3] + b[5]
c[5] = b[2] + b[4] + b[6]

for i in range(1, len(c)):
    print(f"3-{i} : {c[i]}")

d = [0] * 12
d[1] = a[1] + (1 - c[1])
d[2] = a[2] + (1 - c[2])
d[3] = a[3] + (1 - c[3])
d[4] = a[4] + (1 - b[1])
d[5] = a[5] + (1 - b[2])
d[6] = a[6] + (1 - b[3])
d[7] = a[7] + (1 - b[4])
d[8] = a[8] + (1 - b[5])
d[9] = a[9] + (1 - b[6])
d[10] = a[10] + (1 - c[4])
d[11] = a[11] + (1 - c[5])

for i in range(1, len(d)):
    print(f"4-{i} : {d[i]}")

'''
HMMとCRFはどちらも時系列データのラベル予測に用いるモデルである．
HMMは生成モデルであるのに対し，CRFは識別モデルである．
具体的には、入力系列をXラベル列をYとすると，HMMはX,Yの同時確率P(X,Y)をモデル化し，入力系列の分布P(X)を考慮して生成過程を再現しているが，
CRFはX,Yの条件付確率P(Y|X)をモデル化している．
実際にこれらモデルを使用している例として，形態素解析を行うツールであるChaSenはHMMをベースとしている．
また，同様のツールである，MeCabはCRFをベースとしている．
'''
